/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_DIGITALRED3_ID));
    scalableImage1.setPosition(0, 0, 480, 341);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    textArea1.setXY(117, 15);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(240, 22, 22));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));

    buttonWithIcon1.setXY(408, 203);
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REFRESH_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REFRESH_32_ID));
    buttonWithIcon1.setIconXY(15, 16);
    buttonWithIcon1.setAction(buttonCallback);

    toggleButton1.setXY(176, 132);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1.setAction(buttonCallback);

    buttonWithIcon2.setXY(408, 15);
    buttonWithIcon2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    buttonWithIcon2.setIconXY(22, 15);
    buttonWithIcon2.setAction(buttonCallback);

    textArea2.setPosition(0, 88, 468, 33);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(207, 179, 179));
    textArea2.setLinespacing(0);
    textArea2Buffer[0] = 0;
    textArea2.setWildcard(textArea2Buffer);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    buttonWithIcon3.setXY(210, 203);
    buttonWithIcon3.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID));
    buttonWithIcon3.setIconXY(20, 15);
    buttonWithIcon3.setAction(buttonCallback);

    add(scalableImage1);
    add(textArea1);
    add(buttonWithIcon1);
    add(toggleButton1);
    add(buttonWithIcon2);
    add(textArea2);
    add(buttonWithIcon3);
}

void Screen1ViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void Screen1ViewBase::afterTransition()
{
    //Interaction5
    //When screen is entered call virtual function
    //Call updateScreen
    updateScreen();
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithIcon1)
    {
        //Interaction1
        //When buttonWithIcon1 clicked change screen to OpenScreen
        //Go to OpenScreen with no screen transition
        application().gotoOpenScreenScreenNoTransition();
    }
    else if (&src == &toggleButton1)
    {
        //Interaction3
        //When toggleButton1 clicked call virtual function
        //Call toggleButton1Clicked
        toggleButton1Clicked();
    }
    else if (&src == &buttonWithIcon2)
    {
        //Interaction2
        //When buttonWithIcon2 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenCoverTransitionEast();
    }
    else if (&src == &buttonWithIcon3)
    {
        //Interaction4
        //When buttonWithIcon3 clicked call virtual function
        //Call button2Clicked
        button2Clicked();
    }
}
